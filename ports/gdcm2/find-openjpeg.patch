--- a/CMake/FindOpenJPEG.cmake
+++ b/CMake/FindOpenJPEG.cmake
@@ -20,14 +20,38 @@
 
 # Try with pkg-config first
 find_package(PkgConfig)
-pkg_check_modules(OPENJPEG libopenjp2)
+if (PKG_CONFIG_FOUND)
+    pkg_check_modules(OPENJPEG libopenjp2)
+    include(FindPackageHandleStandardArgs)
+    find_package_handle_standard_args(OpenJPEG REQUIRED_VARS
+      OPENJPEG_LIBRARIES
+      OPENJPEG_INCLUDE_DIRS
+      VERSION_VAR OPENJPEG_VERSION
+    )
+endif()
 
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(OpenJPEG REQUIRED_VARS
-  OPENJPEG_LIBRARIES
-  OPENJPEG_INCLUDE_DIRS
-  VERSION_VAR OPENJPEG_VERSION
-)
+find_path(OPENJPEG_INCLUDE_DIR NAMES openjpeg.h)
+find_library(OPENJPEG_LIBRARY NAMES openjp2)
+if (OPENJPEG_LIBRARY)
+    string(FIND ${OPENJPEG_LIBRARY} debug _debug_substrpos)
+    if (_debug_substrpos EQUAL -1)
+        set(OPENJPEG_LIBRARY_RELEASE ${OPENJPEG_LIBRARY})
+        string(REPLACE "/lib" "/debug/lib" OPENJPEG_LIBRARY_DEBUG ${OPENJPEG_LIBRARY_RELEASE})
+    else()
+        set(OPENJPEG_LIBRARY_DEBUG ${OPENJPEG_LIBRARY})
+        string(REPLACE "/debug/lib" "/lib" OPENJPEG_LIBRARY_RELEASE ${OPENJPEG_LIBRARY_DEBUG})
+    endif()
+    set(OPENJPEG_LIBRARY optimized ${OPENJPEG_LIBRARY_RELEASE} debug ${OPENJPEG_LIBRARY_DEBUG})
+    set(OPENJPEG_FOUND TRUE)
+endif()
+
+if (OPENJPEG_FOUND)
+    set(OPENJPEG_LIBRARIES ${OPENJPEG_LIBRARY})
+    set(OPENJPEG_INCLUDE_DIRS ${OPENJPEG_INCLUDE_DIR})
+    message(STATUS "Found OPENJPEG library ${OPENJPEG_LIBRARIES}")
+else()
+    message(FATAL_ERROR "NOT found OPENJPEG")
+endif()
 
 mark_as_advanced(
   OPENJPEG_LIBRARIES
